---
description: try...catch结构
tabTrigger:  gra-error try...catch
scope:       source.js
---
/**
 * 一旦发生错误，程序就中止执行了。JavaScript 提供了try...catch结构，允许对错误进行处理，选择是否往下执行。
 * try代码块抛出错误（throw语句）JavaScript 引擎就立即执行catch代码块，或者说错误被catch代码块捕获了。
 * catch接受一个参数，表示try代码块抛出的值。
 */
try {
  throw new Error('出错了!');
} catch (e) {
  // catch 捕获到 try 代码块中的错误, 进行处理
  console.log(e.name + ": " + e.message); // Error: 出错了!
  console.log(e.stack); // @debugger eval code:2:9
}

/**
 * 如果你不确定某些代码是否会报错，就可以把它们放在try...catch代码块之中，便于进一步对错误进行处理。
 * catch代码块捕获错误之后，程序不会中断，会按照正常流程继续执行下去。
 */
try {
  throw "出错了";
} catch (e) {
  console.log(111);
}
console.log(222);
// 111
// 222

/**
 * catch代码块之中，还可以再抛出错误，甚至使用嵌套的try...catch结构。
 * 为了捕捉不同类型的错误，catch代码块之中可以加入判断语句。
 */
try {
  foo.bar();
} catch (e) {
  // catch捕获错误之后，会判断错误类型（EvalError还是RangeError），进行不同的处理。
  if (e instanceof EvalError) {
    console.log(e.name + ": " + e.message);
  } else if (e instanceof RangeError) {
    console.log(e.name + ": " + e.message);
  } else{
    throw "未知类型错误"
  }
}
