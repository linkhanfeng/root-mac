<snippet><description>作为构造函数</description><tabTrigger>std-date 20 constructor-fun</tabTrigger><scope>source.js</scope><content><![CDATA[
/**
 * 作为构造函数 对它使用new命令,会返回一个Date对象的实例.
      如果不加参数,实例默认的就是当前时间.
 * Date实例有一个独特的地方.其他对象求值的时候,都是默认调用.valueOf()方法,
      但是Date实例求值的时候,默认调用的是toString()方法.
      这导致对Date实例求值,返回的是一个字符串,代表该实例对应的时间.
 * new Date()各个参数的取值范围如下:
      年:使用四位数年份,比如2000.如果写成两位数或个位数,则加上1900,即10代表1910年.如果是负数,表示公元前.
      月:0 表示一月,依次类推,11表示12月.
      日:1到31.
      小时:0到23.
      分钟:0到59.
      秒:0到59
      毫秒:0到999.
 */
var today = new Date();
today // Date 2018-11-18T12:35:38.604Z
// 等同于
today.toString() // "Sun Nov 18 2018 20:35:38 GMT+0800 (中国标准时间)"
// 作为构造函数时,Date对象可以接受多种格式的参数,返回一个该参数对应的时间实例.
// 参数为时间零点开始计算的毫秒数
new Date(1378218728000) // Date 2013-09-03T14:32:08.000Z
// 参数为日期字符串
new Date('January 6, 2013'); // Date 2013-01-05T16:00:00.000Z
// 参数为多个整数,
// 代表年, 月, 日, 小时, 分钟, 秒, 毫秒
new Date(2013, 0, 1, 0, 0, 0, 0) // Date 2012-12-31T16:00:00.000Z
// 关于Date构造函数的参数,有几点说明.
// 第一点,参数可以是负整数,代表1970年元旦之前的时间.
new Date(-1378218728000) // Date 1926-04-30T09:27:52.000Z
// 第二点,只要是能被Date.parse()方法解析的字符串,都可以当作参数.
// 下面多种日期字符串的写法,返回的都是同一个时间.
new Date('2013-2-15')
new Date('2013/2/15')
new Date('02/15/2013')
new Date('FEB, 15, 2013')
new Date('FEB 15, 2013')
new Date('15 Feb 2013')
// Date 2013-02-14T16:00:00.000Z
// 第三,参数为年, 月, 日等多个整数时,年和月是不能省略的,其他参数都可以省略的.
// 也就是说,这时至少需要两个参数,因为如果只使用“年”这一个参数,Date会将其解释为毫秒数.
// 下面代码中,2013被解释为毫秒数,而不是年份.
new Date(2013) // Date 1970-01-01T00:00:02.013Z
// 下面代码中,不管有几个参数,返回的都是2013年1月1日零点.
new Date(2013, 0) // Date 2012-12-31T16:00:00.000Z
new Date(2013, 0, 1) // Date 2012-12-31T16:00:00.000Z
new Date(2013, 0, 1, 0) // Date 2012-12-31T16:00:00.000Z
new Date(2013, 0, 1, 0, 0, 0, 0) // Date 2012-12-31T16:00:00.000Z
// 注意,月份从0开始计算,但是,天数从1开始计算.另外,除了日期的默认值为1,小时, 分钟, 秒钟和毫秒的默认值都是0.
// 这些参数如果超出了正常范围,会被自动折算.比如,如果月设为15,就折算为下一年的4月.
new Date(2013, 15) // Date 2014-03-31T16:00:00.000Z
// 日期设为0,就代表上个月的最后一天.
new Date(2013, 0, 0) // Date 2012-12-30T16:00:00.000Z
// 参数还可以使用负数,表示扣去的时间.
// 下面代码中,分别对月和日使用了负数,表示从基准日扣去相应的时间.
new Date(2013, -1) // Date 2012-11-30T16:00:00.000Z
new Date(2013, 0, -1) // Date 2012-12-29T16:00:00.000Z
]]></content></snippet>